{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "3780320235913339492"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "dumpdemo"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "adminLogin": {
      "type": "string",
      "defaultValue": "demo"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "D3moP@ssword1!"
    }
  },
  "variables": {
    "uniqueName": "[format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix')))]",
    "fileShareName": "backups",
    "volumeName": "backup",
    "dbName": "sampledb"
  },
  "resources": [
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2022-01-20-preview",
      "name": "[format('{0}/{1}', variables('uniqueName'), 'AllAzure')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-01-20-preview",
      "name": "[format('{0}/{1}', variables('uniqueName'), variables('dbName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2022-01-20-preview",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "version": "13",
        "storage": {
          "storageSizeGB": 32
        },
        "administratorLogin": "[parameters('adminLogin')]",
        "administratorLoginPassword": "[parameters('adminPassword')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-09-01",
      "name": "[format('{0}/default/{1}', variables('uniqueName'), variables('fileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-10-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "properties": {
        "restartPolicy": "OnFailure",
        "containers": [
          {
            "name": "backup",
            "properties": {
              "image": "postgres:13.8-alpine",
              "command": [
                "/bin/bash",
                "-c",
                "[format('pg_dump -U {0} -h {1} -Fc -f \"/backup/{2}-$(date +\"%FT%H%M\").dump\" {3}', parameters('adminLogin'), reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('uniqueName'))).fullyQualifiedDomainName, variables('dbName'), variables('dbName'))]"
              ],
              "environmentVariables": [
                {
                  "name": "PGPASSWORD",
                  "secureValue": "[parameters('adminPassword')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "[variables('volumeName')]",
                  "mountPath": "/backup",
                  "readOnly": false
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 8
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "volumes": [
          {
            "name": "[variables('volumeName')]",
            "azureFile": {
              "shareName": "[variables('fileShareName')]",
              "storageAccountName": "[variables('uniqueName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName')), '2021-09-01').keys[0].value]",
              "readOnly": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/databases', variables('uniqueName'), variables('dbName'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('uniqueName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', variables('uniqueName'), variables('fileShareName')), '/')[0], split(format('{0}/default/{1}', variables('uniqueName'), variables('fileShareName')), '/')[1], split(format('{0}/default/{1}', variables('uniqueName'), variables('fileShareName')), '/')[2])]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers/firewallRules', variables('uniqueName'), 'AllAzure')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "properties": {
        "parameters": {
          "$connections": {
            "value": {
              "arm": {
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'arm')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', 'arm')]",
                "connectionName": "arm",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 15
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "StartPGDumpACI": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['arm']['connectionId']"
                  }
                },
                "method": "post",
                "path": "[format('/subscriptions/@{{encodeURIComponent(''{0}'')}}/resourcegroups/@{{encodeURIComponent(''{1}'')}}/providers/@{{encodeURIComponent(''Microsoft.ContainerInstance'')}}/@{{encodeURIComponent(''containerGroups/{2}'')}}/@{{encodeURIComponent(''start'')}}', subscription().subscriptionId, resourceGroup().name, variables('uniqueName'))]",
                "queries": {
                  "x-ms-api-version": "2021-10-01"
                }
              },
              "type": "ApiConnection"
            }
          }
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('uniqueName'))]",
        "[resourceId('Microsoft.Web/connections', 'arm')]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "arm",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'arm')]"
        },
        "displayName": "arm",
        "parameterValueType": "Alternative",
        "alternativeParameterValues": {}
      }
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('uniqueName'))]",
      "properties": {
        "roleName": "[format('Start ACI - {0}', variables('uniqueName'))]",
        "type": "customRole",
        "assignableScopes": [
          "[resourceGroup().id]"
        ],
        "permissions": [
          {
            "actions": [
              "Microsoft.ContainerInstance/*/read",
              "Microsoft.ContainerInstance/containerGroups/start/action",
              "Microsoft.ContainerInstance/containerGroups/stop/action",
              "Microsoft.ContainerInstance/containerGroups/restart/action"
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerInstance/containerGroups/{0}', variables('uniqueName'))]",
      "name": "[guid(resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('uniqueName'))), resourceId('Microsoft.Logic/workflows', variables('uniqueName')), resourceId('Microsoft.ContainerInstance/containerGroups', variables('uniqueName')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Logic/workflows', variables('uniqueName')), '2019-05-01', 'full').identity.principalId]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('uniqueName')))]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('uniqueName'))]",
        "[resourceId('Microsoft.Logic/workflows', variables('uniqueName'))]",
        "[resourceId('Microsoft.Authorization/roleDefinitions', guid(variables('uniqueName')))]"
      ]
    }
  ]
}