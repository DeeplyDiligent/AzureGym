{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "17166068812335318132"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location all resources will be deployed to"
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "aksdemo",
      "metadata": {
        "description": "A prefix to add to the start of all resource names. Note: A \"unique\" suffix will also be added"
      }
    },
    "vnetAddressSpacePrefixes": {
      "type": "array",
      "defaultValue": [
        "10.197.0.0/16"
      ],
      "metadata": {
        "description": "The address space prefixes to use for the vnet. All subnets defined in the params should be contained within this."
      }
    },
    "systemNodePool": {
      "type": "object",
      "defaultValue": {
        "name": "system",
        "nodeSubnetAddressPrefix": "10.197.4.0/23",
        "podSubnetAddressPrefix": "10.197.8.0/22",
        "vmCount": 3,
        "vmSize": "standard_d2s_v5"
      },
      "metadata": {
        "description": "The system node pool high-level configuration. The following properties are required: name, nodeSubnetAddressPrefix, podSubnetAddressPrefix, vmCount, vmSize"
      }
    },
    "workloadNodePools": {
      "type": "array",
      "defaultValue": [
        {
          "name": "shared",
          "nodeSubnetAddressPrefix": "10.197.64.0/23",
          "podSubnetAddressPrefix": "10.197.68.0/22",
          "vmCount": 3,
          "vmSize": "standard_d2s_v5"
        },
        {
          "name": "protected",
          "nodeSubnetAddressPrefix": "10.197.72.0/23",
          "podSubnetAddressPrefix": "10.197.76.0/22",
          "vmCount": 3,
          "vmSize": "standard_d2s_v5",
          "taints": [
            "Workload=protected:NoSchedule"
          ]
        }
      ],
      "metadata": {
        "description": "An array of workload node pool high-level configurations. The following properties are required on each element of the array: name, nodeSubnetAddressPrefix, podSubnetAddressPrefix, vmCount, vmSize. You can also optionally define: taints"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Demo-Name": "MultiSubnetAKS",
        "Demo-Repo": "https://github.com/ScottHolden/AzureGym/MultiSubnetAKS"
      },
      "metadata": {
        "description": "Tags to be applied to all deployed resources"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "nodeSubnets",
        "count": "[length(concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools')))]",
        "input": {
          "name": "[format(variables('nodeSubnetFormat'), concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools'))[copyIndex('nodeSubnets')].name)]",
          "properties": {
            "addressPrefix": "[concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools'))[copyIndex('nodeSubnets')].nodeSubnetAddressPrefix]"
          }
        }
      },
      {
        "name": "podSubnets",
        "count": "[length(concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools')))]",
        "input": {
          "name": "[format(variables('podSubnetFormat'), concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools'))[copyIndex('podSubnets')].name)]",
          "properties": {
            "addressPrefix": "[concat(createArray(parameters('systemNodePool')), parameters('workloadNodePools'))[copyIndex('podSubnets')].podSubnetAddressPrefix]"
          }
        }
      },
      {
        "name": "workloadAgentPools",
        "count": "[length(parameters('workloadNodePools'))]",
        "input": {
          "name": "[parameters('workloadNodePools')[copyIndex('workloadAgentPools')].name]",
          "mode": "User",
          "osType": "Linux",
          "count": "[parameters('workloadNodePools')[copyIndex('workloadAgentPools')].vmCount]",
          "vmSize": "[parameters('workloadNodePools')[copyIndex('workloadAgentPools')].vmSize]",
          "type": "VirtualMachineScaleSets",
          "availabilityZones": "[variables('nodeZones')]",
          "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format(variables('uniqueNameFormat'), 'vnet'), format(variables('nodeSubnetFormat'), parameters('workloadNodePools')[copyIndex('workloadAgentPools')].name))]",
          "podSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format(variables('uniqueNameFormat'), 'vnet'), format(variables('podSubnetFormat'), parameters('workloadNodePools')[copyIndex('workloadAgentPools')].name))]",
          "nodeTaints": "[if(contains(parameters('workloadNodePools')[copyIndex('workloadAgentPools')], 'taints'), parameters('workloadNodePools')[copyIndex('workloadAgentPools')].taints, createArray())]"
        }
      }
    ],
    "uniqueNameFormat": "[format('{0}-{{0}}-{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix')))]",
    "uniqueShortName": "[toLower(format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix'))))]",
    "nodeSubnetFormat": "aks-{0}-nodepool",
    "podSubnetFormat": "aks-{0}-pods",
    "nodeZones": "[pickZones('Microsoft.Compute', 'virtualMachines', parameters('location'), 3)]",
    "systemAgentPool": {
      "name": "[parameters('systemNodePool').name]",
      "mode": "System",
      "osType": "Linux",
      "count": "[parameters('systemNodePool').vmCount]",
      "vmSize": "[parameters('systemNodePool').vmSize]",
      "type": "VirtualMachineScaleSets",
      "availabilityZones": "[variables('nodeZones')]",
      "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format(variables('uniqueNameFormat'), 'vnet'), format(variables('nodeSubnetFormat'), parameters('systemNodePool').name))]",
      "podSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format(variables('uniqueNameFormat'), 'vnet'), format(variables('podSubnetFormat'), parameters('systemNodePool').name))]",
      "nodeTaints": [
        "CriticalAddonsOnly=true:NoSchedule"
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-05-01",
      "name": "[format(variables('uniqueNameFormat'), 'vnet')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vnetAddressSpacePrefixes')]"
        },
        "subnets": "[concat(variables('nodeSubnets'), variables('podSubnets'))]"
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2022-07-02-preview",
      "name": "[format(variables('uniqueNameFormat'), 'akscluster')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Basic",
        "tier": "Paid"
      },
      "properties": {
        "dnsPrefix": "[variables('uniqueShortName')]",
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "loadBalancerSku": "standard"
        },
        "agentPoolProfiles": "[concat(createArray(variables('systemAgentPool')), variables('workloadAgentPools'))]",
        "aadProfile": {
          "enableAzureRBAC": true,
          "managed": true
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format(variables('uniqueNameFormat'), 'vnet'))]"
      ]
    }
  ]
}